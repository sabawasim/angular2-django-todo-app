{"version":3,"sources":["webpack:///./src/app/all-tasks/all-tasks.module.ts","webpack:///./src/app/all-tasks/all-tasks.component.ts","webpack:///./src/app/all-tasks/all-tasks.routing.ts","webpack:///./src/app/all-tasks/all-tasks.component.scss","webpack:///./src/app/all-tasks/all-tasks.component.html"],"names":[],"mappings":"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","file":"0.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { AllTasksRoutingModule } from './all-tasks.routing';\nimport {CommonModule} from '@angular/common';\nimport { AllTasksComponent } from './all-tasks.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpModule }    from '@angular/http';\n@NgModule({\n  imports: [\n    AllTasksRoutingModule,\n    CommonModule,\n    FormsModule,\n    HttpModule\n\n  ],\n  declarations: [\n    AllTasksComponent\n  ]\n})\n\nexport class AllTasksModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/all-tasks/all-tasks.module.ts","import { Component, OnInit,OnChanges } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport 'rxjs';\nimport  'jquery'\ndeclare var $;\nimport {CONSTANTS} from '../constants';\n@Component({\n  selector: 'all-tasks',\n  templateUrl: './all-tasks.component.html',\n  styleUrls: ['./all-tasks.component.scss']\n})\nexport class AllTasksComponent implements OnChanges {\n  constructor(private http: HttpClient,private router:Router,private cons:CONSTANTS) {\n    if (localStorage.getItem(\"login_data\")==null)\n    {\n      this.router.navigate(['/']);\n    }\n    \n    else{\n      this.login_data = JSON.parse(localStorage.getItem(\"login_data\"))\n          this.header=new HttpHeaders(\n      \n          {'Content-Type': 'application/json','Authorization': 'Token ' + this.login_data.token}); \n        \n          }\n  }\nlogin_data:any;\nall_tasks:any;\nheader:any;\nmy_tasks=false;\ndone_task=false;\nadd_task_success=false;\nadd_task_error=false;\nusers:any;\ndel_task_msg=false;\ndel_task_error=false;\nedit_task_success=false;\nmessage=\"\";\n\nname1=\"\";\ndescription1=\"\";\nassigned_to1=\"\";\nstatus1=\"\";\nid=\"\";\n  ngOnInit() {\n    this.allTasks();\n    this.allUsers();\n  }\n  ngOnChanges()\n  {\n\n  }\n  addTask(){\n    $(\"#myModal\").modal()\n  }\n\n  deleteTask(id){\n    this.http.post(this.cons.SERVER_URL+'/todo_app/delete-task/',{id:id},{headers:this.header}).map(\n        (res) => {\n            return res\n        }).subscribe(res=>{\n          if(res['success']){\n            this.del_task_msg=true;\n            setTimeout(()=>{\n              this.del_task_msg = false;\n         }, 3000);\n            this.allTasks();\n          }\n          else{\n          this.message = res['message'];\n            this.del_task_error=true;\n          setTimeout(()=>{\n            this.del_task_error = false;\n       }, 3000);\n          this.allTasks();\n          }\n          \n        });\n  }\n  sumbitNewTask(name,description,status,assigned_to){\n    console.log(name,description)\n    if (name.trim().length>0 && description.trim().length>0){\n      let data_obj={\"name\":name,\"description\":description,\"status\":status,\"assigned_to\":assigned_to};\n      this.http.post(this.cons.SERVER_URL+'/todo_app/add-task/',data_obj,{headers:this.header}).map(\n        (res) => {\n            return res\n        }).subscribe(res=>{\n          if(res['success']){\n            this.allTasks();\n            this.my_tasks=false;\n            this.done_task=false;\n            this.add_task_success=true;\n            $('#myModal').modal('hide');\n            setTimeout(()=>{    //<<<---    using ()=> syntax\n              this.add_task_success = false;\n         }, 3000);\n  \n          }\n          \n          \n        });\n    }\n    else{\n      this.add_task_error=true;\n      $('#myModal').modal('hide');\n      setTimeout(()=>{    //<<<---    using ()=> syntax\n        this.add_task_error = false;\n        $('#myModal').modal();\n   }, 3000);\n    }\n\n  }\n  allTasks(){\n      this.http.get(this.cons.SERVER_URL+'/todo_app/view-all/',{headers:this.header}).map(\n        (res) => {\n            return res\n        }).subscribe(res=>{\n          this.all_tasks=res;\n          \n        });\n  }\n  allUsers(){\n    this.http.get(this.cons.SERVER_URL+'/user_management/view-all/',{headers:this.header}).map(\n      (res) => {\n          return res\n      }).subscribe(res=>{\n        this.users=res;\n        \n      });\n}\n\n  selectTask(){\n    this.my_tasks = !this.my_tasks;\n    this.done_task=false;\n    if (this.my_tasks){\n      this.http.post(this.cons.SERVER_URL+'/todo_app/view-my-task/',{id:this.login_data.id},{headers:this.header}).map(\n        (res) => {\n            return res\n        }).subscribe(res=>{\n          this.all_tasks=res['tasks'];\n          \n        });\n    }\n    else{\n      this.allTasks();\n    }\n  \n  }\n\n  doneTask(){\n    this.done_task = !this.done_task;\n    this.my_tasks=false;\n    if (this.done_task){\n      this.http.post(this.cons.SERVER_URL+'/todo_app/hide-all-done-task/',{},{headers:this.header}).map(\n        (res) => {\n            return res\n        }).subscribe(res=>{\n          if(res['tasks']){\n            this.all_tasks=res['tasks'];\n          }\n        });\n    }\n    else{\n      this.allTasks();\n    }\n  \n  }\n\n  editTask(obj){\n    this.name1=obj.name;\n    if (obj.assigned_to__username){\n      this.assigned_to1 = obj.assigned_to__username;\n    }\n    else{\n      this.assigned_to1 = obj.assigned_to.username;\n    }\n    this.status1 = obj.status;\n    this.description1 = obj.description;\n    this.id=obj.id;\n    console.log(obj)\n    $('#myModal1').modal();\n\n  }\n\n\n  submitEditTask(name,description,status,assigned_to){\n    if (name.trim().length>0 && description.trim().length>0){\n      let data_obj={\"name\":name,\"description\":description,\"status\":status,\"id\":this.id,\"assigned_to\":assigned_to};\n      this.http.post(this.cons.SERVER_URL+'/todo_app/edit-task/',data_obj,{headers:this.header}).map(\n        (res) => {\n            return res\n        }).subscribe(res=>{\n          if(res['success']){\n            this.allTasks();\n            this.my_tasks=false;\n            this.done_task=false;\n            this.edit_task_success=true;\n            $('#myModal1').modal('hide');\n            setTimeout(()=>{    //<<<---    using ()=> syntax\n              this.edit_task_success = false;\n         }, 3000);\n  \n          }\n          else{\n            this.message = res['message'];\n            this.del_task_error=true;\n            $('#myModal1').modal('hide');\n          setTimeout(()=>{\n            this.del_task_error = false;\n       }, 3000);\n          this.allTasks();\n          }\n          \n          \n        });\n    }\n    else{\n      this.add_task_error=true;\n      $('#myModal').modal('hide');\n      setTimeout(()=>{    //<<<---    using ()=> syntax\n        this.add_task_error = false;\n        $('#myModal').modal();\n   }, 3000);\n    }\n\n  }\n\n  updateTask(task){\n\n    this.http.post(this.cons.SERVER_URL+'/todo_app/markdone-task/',{id:task.id},{headers:this.header}).map(\n      (res) => {\n          return res\n      }).subscribe(res=>{\n        if(res['success']){\n          this.allTasks();\n          this.my_tasks=false;\n          this.done_task=false;\n          this.edit_task_success=true;\n          setTimeout(()=>{    //<<<---    using ()=> syntax\n            this.edit_task_success = false;\n       }, 3000);\n\n        }\n        else{\n          this.message = res['message'];\n          this.del_task_error=true;\n        setTimeout(()=>{\n          this.del_task_error = false;\n     }, 3000);\n        this.allTasks();\n        }\n        \n        \n      });\n  }\n  logout(){\n    this.http.get(this.cons.SERVER_URL+'/user_management/logout/',{headers:this.header}).map(\n        (res) => {\n            return res\n        }).subscribe(res=>{\n          \n        });\n        localStorage.removeItem(\"login_data\");\n        this.router.navigate(['/']);\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/all-tasks/all-tasks.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AllTasksComponent } from './all-tasks.component';\n\nconst routes: Routes = [\n  { path: '', component: AllTasksComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AllTasksRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/all-tasks/all-tasks.routing.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/all-tasks/all-tasks.component.scss\n// module id = 602\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\n  <br>\\n  <h2>\\n    Hi {{login_data.username}}!\\n  </h2><br>\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"add_task_success\\\">\\n      <strong>Task Added! </strong> New Task Added Sucessfully\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"add_task_error\\\">\\n        <strong>Error! </strong> Please fill all feilds, we will reopen form\\n      </div>\\n      <div class=\\\"alert alert-success\\\" *ngIf=\\\"del_task_msg\\\">\\n          <strong>Task Deleted! </strong> The Task deleted succesfully.\\n        </div>\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"edit_task_success\\\">\\n            <strong>Task Edited! </strong> The Task edited succesfully.\\n          </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"del_task_error\\\">\\n            <strong>Error! </strong> {{message}}.\\n          </div>\\n          <div style=\\\"float:right\\\">    <button (click)=\\\"addTask()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">+ Add Task</button>\\n            <button (click)=\\\"logout()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">Logout</button>\\n        </div>\\n\\n  <input type=\\\"checkbox\\\" [checked]=\\\"my_tasks\\\" (change)=\\\"selectTask()\\\" /> Show only my tasks <br><br>\\n  <input type=\\\"checkbox\\\" [checked]=\\\"done_task\\\" (change)=\\\"doneTask()\\\" /> Show only un-completed tasks <br><br>\\n  <table class=\\\"table table table-hover\\\" *ngIf=\\\"all_tasks\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Task Name</th>\\n        <th scope=\\\"col\\\">Created By</th>\\n        <th scope=\\\"col\\\">Description</th>\\n        <th scope=\\\"col\\\">Assigned To</th>\\n        <th scope=\\\"col\\\">Status</th>\\n        <th scope=\\\"col\\\">Closed By</th>\\n        <th scope=\\\"col\\\"></th>\\n        <th scope=\\\"col\\\"></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let single_task of all_tasks;let i = index;\\\">\\n        <td>{{single_task.name}}</td>\\n        <td>{{single_task.created_by?.username}}{{single_task?.created_by__username\\n        }}</td>\\n        <td>{{single_task.description}}</td>\\n        <td>{{single_task.assigned_to?.username}}{{single_task?.assigned_to__username\\n          }}</td>\\n        <td>{{single_task.status}} <button *ngIf=\\\"single_task.status !='Done'\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-sm\\\"(click)=\\\"updateTask(single_task)\\\">Mark as Done</button></td>\\n        <td>{{single_task.closed_by?.username}}{{single_task?.closed_by__username}}</td>\\n        <td><button type=\\\"submit\\\" class=\\\"btn btn-warning\\\"(click)=\\\"editTask(single_task)\\\">Edit</button></td>\\n        <td><button type=\\\"submit\\\" class=\\\"btn btn-danger\\\"(click)=\\\"deleteTask(single_task.id)\\\">Delete</button></td>\\n      </tr>\\n      \\n    </tbody>\\n  </table>\\n  \\n</div>\\n<!-- Modal -->\\n<div id=\\\"myModal\\\" class=\\\"modal\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n  \\n      <!-- Modal content-->\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          <h4 class=\\\"modal-title\\\">Add New Task</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"task\\\">Task Name</label>\\n                <input type=\\\"text\\\" placeholder=\\\"Task Name\\\" #name class=\\\"form-control\\\" >\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"task\\\">Task Description</label>\\n                  <input type=\\\"text\\\" placeholder=\\\"Task Description\\\" #description class=\\\"form-control\\\" >\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"task\\\">Task Status</label>\\n                  <select #status class=\\\"form-control\\\" ><option value=\\\"Not Done\\\">Not Done</option><option value=\\\"Done\\\">Done</option></select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"task\\\">Task Assigned to</label>\\n                  <select #assigned_to placeholder=\\\"Assigned To\\\" class=\\\"form-control\\\" ><option *ngFor=\\\"let user of users\\\" [ngValue]=\\\"user\\\">{{user.user.username}}</option></select>\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-default\\\"(click)=\\\"sumbitNewTask(name.value,description.value,status.value,assigned_to.value)\\\">Add New Task</button>\\n        </div>\\n        \\n      </div>\\n  \\n    </div>\\n  </div>\\n\\n\\n\\n<!-- Modal -->\\n<div id=\\\"myModal1\\\" class=\\\"modal\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n  \\n      <!-- Modal content-->\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          <h4 class=\\\"modal-title\\\">Edit Task</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"task\\\">Task Name</label>\\n                <input type=\\\"text\\\" placeholder=\\\"Task Name\\\" [(ngModel)] = \\\"name1\\\" #name2 class=\\\"form-control\\\" >\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"task\\\">Task Description</label>\\n                  <input type=\\\"text\\\" placeholder=\\\"Task Description\\\" [(ngModel)] = \\\"description1\\\" #description2 class=\\\"form-control\\\" >\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"task\\\">Task Status</label>\\n                  <select [(ngModel)] = \\\"status1\\\" #status2 class=\\\"form-control\\\" ><option value=\\\"Not Done\\\">Not Done</option><option value=\\\"Done\\\">Done</option></select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"task\\\">Task Assigned to</label>\\n                  <select #assigned_to2  [(ngModel)] = \\\"assigned_to1\\\" placeholder=\\\"Assigned To\\\" class=\\\"form-control\\\" ><option *ngFor=\\\"let user of users\\\" [ngValue]=\\\"user.user.username\\\">{{user.user.username}}</option></select>\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-default\\\"(click)=\\\"submitEditTask(name2.value,description2.value,status2.value,assigned_to2.value)\\\">Edit Task</button>\\n        </div>\\n        \\n      </div>\\n  \\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/all-tasks/all-tasks.component.html\n// module id = 603\n// module chunks = 0"],"sourceRoot":""}